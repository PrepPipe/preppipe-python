name: "ci"

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

on:
  push:
    #branches:
    #  - "main"
    #  - "develop"
  workflow_dispatch:

jobs:
  pre-release:
    name: "Pre Release"
    runs-on: "windows-2019" # Windows 10, VS 2019

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: ./.github/actions/build
      - name: Detecting version
        id: vars
        shell: bash
        run: |
          echo "version_tag=$(python3 ./ci/printversion.py)" >> $GITHUB_OUTPUT
      - name: Print version
        run: echo "${{ steps.vars.outputs.version_tag }}"
      - name: install pip-licenses
        run: python3 -m pip install --upgrade pip-licenses
      - name: collect licenses
        run: |
          python3 ./ci/collect_licenses.py --output-dir licenses
      - name: install pyinstaller
        run: pip install --upgrade pyinstaller
      - name: create versionfiles
        run: |
          python3 ./ci/versionfile_gen.py ./ci/versionfile_cli.txt preppipe_cli.exe --cli
          python3 ./ci/versionfile_gen.py ./ci/versionfile_gui.txt preppipe.exe
      - name: run pyinstaller
        run: pyinstaller ci/preppipe.spec
      - name: build package
        shell: bash
        run: |
          mv licenses dist/preppipe
          cd dist/preppipe && 7z.exe a -t7z -mx=9 ../preppipe-windows-x64.7z *  && cd ../..
      - name: generate documentation files
        run: |
          python3 ci/mkdocsgen.py
          cd docs_mkdocs && 7z.exe a -t7z -mx=9 ../dist/preppipe-docs-overlay.7z docs && cd ..
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest-${{ env.BRANCH_NAME }}"
          prerelease: true
          title: "${{ steps.vars.outputs.version_tag }} 最新版本 (Latest build) - ${{ env.BRANCH_NAME }}"
          files: |
            dist/preppipe-windows-x64.7z
            dist/preppipe-docs-overlay.7z
            dist/*.whl
