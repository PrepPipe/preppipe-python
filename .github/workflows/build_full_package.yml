name: "build-full-package"

env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

on:
  workflow_dispatch:

jobs:

  build-full-package:
    name: "Build full package"
    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout misc files
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            LICENSE
            README_dist.txt
          sparse-checkout-cone-mode: false

      - name: "Setup stage directory"
        shell: bash
        run: |
          mkdir -p stage
          mv LICENSE stage
          mv README_dist.txt stage/README.txt

      - name: "Checkout document repo"
        uses: actions/checkout@v4
        with:
          name: "PrepPipe/preppipe-docs"
          path: docs_mkdocs

      - name: "Download main repo artifacts"
        id: download_main
        uses: robinraju/release-downloader@v1.10
        with:
          repository: "PrepPipe/preppipe-python"
          tag: "latest-${{ env.BRANCH_NAME }}"
          fileName: "preppipe-*.7z"
          tarBall: false
          zipBall: false
          out-file-path: "."

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '>= 3.10'

      - name: Install document building dependencies
        run: |
          python -m pip install --upgrade pip
          python3 -m pip install mkdocs
          python3 -m pip install mkdocs-material
          python3 -m pip install mkdocs-static-i18n[material]
          python3 -m pip install mkdocs-ezlinks-plugin

      - name: "Build Documents"
        run: |
          7z x preppipe-docs-overlay.7z -y -odocs_mkdocs
          echo "ls -l"
          ls -l
          echo "ls -l docs_mkdocs"
          ls -l docs_mkdocs
          cd docs_mkdocs && mkdocs build -f mkdocs.yml && cd ..
          mv docs_mkdocs/generated stage/docs
        # now document files are in stage/docs

      - name: "Download ffmpeg"
        uses: robinraju/release-downloader@v1.10
        with:
          repository: "BtbN/FFmpeg-Builds"
          tag: "latest"
          fileName: "ffmpeg-master-latest-win64-lgpl-shared.zip"
          tarBall: false
          zipBall: false
          out-file-path: "."
      - name: "Extract ffmpeg"
        shell: bash
        run: |
          unzip ffmpeg-master-latest-win64-lgpl-shared.zip "ffmpeg-master-latest-win64-lgpl-shared/bin/*" -d "windows-x64"
          mv windows-x64/ffmpeg-master-latest-win64-lgpl-shared/bin/* windows-x64/
          mv windows-x64/ffmpeg-master-latest-win64-lgpl-shared/LICENSE.txt windows-x64/LICENSE-ffmpeg.txt
          rm -rf windows-x64/ffmpeg-master-latest-win64-lgpl-shared
          rm -f ffmpeg-master-latest-win64-lgpl-shared.zip

      - name: "Combine all files"
        shell: bash
        run: |
          mkdir dist
          7z x preppipe-windows-x64.7z -owindows-x64
          rm -f preppipe-windows-x64.7z
          cp -r stage/docs windows-x64
          cd windows-x64 && 7z a -t7z -mx=9 ../dist/preppipe-windows-x64-full.7z * && cd ..

      - name: "Modify the release to include the full package"
        uses: IsaacShelton/update-existing-release@v1.3.4
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          tag: "latest-${{ env.BRANCH_NAME }}"
          replace: false
          updateTag: false
          prerelease: true
          files: "dist/preppipe-windows-x64-full.7z"
